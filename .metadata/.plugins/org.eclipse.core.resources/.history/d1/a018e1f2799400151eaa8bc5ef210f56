<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<context:component-scan base-package="com.egen.test" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:Egen" />
		<property name="username" value="sa" />
		<property name="password" value="" />

	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hbm.cfg.xml" />
	</bean>

	<tx:annotation-driven />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>



	<bean id="userDao" class="com.egen.test.userservice.dao.UserDAO">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="userService" class="com.egen.test.userservice.service.UserService">
		<constructor-arg>
			<ref bean="userDao" />
		</constructor-arg>
	</bean>
	
	<bean id="listUserRequestValidator" class="com.egen.test.userservice.validator.ListUserRequestValidator" />
	<bean id="listUserResponseMapper" class="com.egen.test.userservice.responsemapper.ListUserResponseMapper" />		
	<bean id="createUserRequestValidator" class="com.egen.test.userservice.validator.CreateUserRequestValidator" />
	<bean id="createUserResponseMapper" class="com.egen.test.userservice.responsemapper.CreateUserResponseMapper" />
		
	<bean id="listUserResourceFacade" class="com.egen.test.userservice.facade.ListUserResourceFacade">
		<constructor-arg>
			<ref bean="userListRequestValidator" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="userListResponseMapper" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="userService" />
		</constructor-arg>
	</bean>
	
	<bean id="createUserResourceFacade" class="com.egen.test.userservice.facade.CreateUserResourceFacade">
		<constructor-arg>
			<ref bean="createUserRequestValidator" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="createUserResponseMapper" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="userService" />
		</constructor-arg>
	</bean>
		
	<bean id="userResource" class="com.egen.test.userservice.resource.UserResource">
		<constructor-arg>
			<ref bean="listUserResourceFacade" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="createUserResourceFacade" />
		</constructor-arg>
	</bean>

</beans>
