package com.egen.test.framework.facade;

import com.egen.test.framework.Exception.EgenException;
import com.egen.test.framework.RequestValidator.IRequestValidator;
import com.egen.test.framework.ResponseMapper.IResponseMapper;
import com.egen.test.framework.backendresponse.BackendResponse;
import com.egen.test.framework.backendresponse.IBackendResponse;
import com.egen.test.framework.constants.IUserServiceConstants;
import com.egen.test.framework.extrainfo.IExtraInfo;
import com.egen.test.framework.request.IRequest;
import com.egen.test.framework.response.IResponse;
import com.egen.test.userservice.service.IUserService;

public class UserResourceFacade implements IResourceFacade{
	
	private IRequest request;
	private IResponse response;
	private EgenException egenException;
	private BackendResponse backendResponse;
	@Override
	public IResponse initiate(IRequestValidator requestValidator, IUserService userService, IResponseMapper responseMapper,IUserServiceConstants userServiceConstants) {
		if(!requestValidator.validate(request,egenException)){
			return responseMapper.createInvalidResponse(response,egenException);
		}
		
		backendResponse = userService.processRequest(userServiceConstants);
		
		if(backendResponse.isValidResponse()){
			response = responseMapper.buildResponse(backendResponse);
		}
		
		return response;
	}

	@Override
	public IBackendResponse processsRequest(IExtraInfo extraInfo){
		if(userServiceConstants.equals(UserServiceConstants.ListAll)){
			backendResponse = (BackendResponse) userService.getUserList(); 
		}else if(userServiceConstants.equals(UserServiceConstants.Insert)){
			backendResponse = (BackendResponse) userService.save(((CreateUserRequest)request).getUser());
		}
		
	}
	public UserResourceFacade(IRequest request, IResponse response) {
		super();
		this.request = request;
		this.response = response;
	}
	

}
